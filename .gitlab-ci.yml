services:
  - docker:dind

stages:
  - test
  - build
  - deploy

lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 api

api-unit-tests-job:
  image: python:3-bullseye
  stage: test
  needs:
    - lint-test-job
  script:
    - cd api
    - pip install -r requirements.txt
    - python -m pytest
  variables:
    DATABASE_URL: $DATABASE_URL
    SIGNING_KEY: $SIGNING_KEY

build-api-image:
  stage: build
  image: docker:git
  variables:
    GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/api
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    AWS_BUCKET_NAME: $AWS_BUCKET_NAME
  before_script:
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  script:
    - docker build --tag $GITLAB_IMAGE:latest ./api
    - docker push $GITLAB_IMAGE:latest
  only:
    - main

build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
  variables:
    PUBLIC_URL: https://cali-pals.gitlab.io/module3-project-gamma
    REACT_APP_API_HOST: https://mar-8-pt-octaveapi.mod3projects.com
    REACT_APP_WS_HOST: ws://mar-8-pt-octaveapi.mod3projects.com
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
